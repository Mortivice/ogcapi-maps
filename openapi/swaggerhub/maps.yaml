---
openapi: 3.0.0
info:
  title: Map data service example. Part of the OGC API Maps OpenAPI work.
  description: |-
    Maps of more than one collection.
    This is a draft of an example of a service following the OGC API maps that produces maps.

    It is elaborated in the Testbed-15 Open Portrayal Framework in collaboration with the WMS.SWG. The Map Tile API is a Web API for fetching and managing maps and tiles.

    It illustrated how to request a map from one or more than one collections
  contact:
    name: Joan Maso
    email: joan.maso@uab.cat
  license:
    name: OGC License
    url: https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/LICENSE
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/UAB-CREAF/ogc-api-maps-opf-xmp-more-1-collection/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://data.example.org
  description: Server examples
tags:
- name: OGC API Common
  description: Common characteristics of this API
- name: Map resources
  description: Map resources and descriptions
- name: Geospatial Data Resource Maps
  description: Access to map subsets for geospatial data resources
- name: Dataset Maps
  description: Access to map subsets the dataset.
paths:
  /:
    get:
      tags:
      - OGC API Common
      summary: landing page
      description: The landing page provides links to the API definition, the conformance statements and to the feature collections in this dataset. It is conformant to - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/req/core'
      operationId: getLandingPage
      parameters:
      - $ref: '#/components/parameters/f-png-jpeg-core'
      - $ref: '#/components/parameters/def-param'
      responses:
        "200":
          description: Links to the API capabilities and the TileMatrixSets shared by this API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /conformance:
    get:
      tags:
      - OGC API Common
      description: |-
        A list of all requirements classes specified in a standard that the
        server conforms to. It is conformant to - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/req/core'
      operationId: getConformanceDeclaration
      parameters:
      - $ref: '#/components/parameters/f-png-jpeg-main'
        description: |-
          The format of the response. If no value is provided, the standard http
          rules apply, i.e., the accept header is used to determine the format.

          The only pre-defined value is "json". The response to other values is
          determined by the server.
      - $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - application/json
        example: application/json
      responses:
        "200":
          description: the URIs of all requirements classes supported by this API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confClasses'
              example:
                conformsTo:
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
                - http://www.opengis.net/spec/ogcapi-common-2/1.0/conf/collections
                - http://www.opengis.net/spec/ogcapi-maps-1/1.0/conf/core
                - http://www.opengis.net/spec/ogcapi-maps-2/1.0/conf/bbox
                - http://www.opengis.net/spec/ogcapi-maps-1/1.0/conf/geodata
                - http://www.opengis.net/spec/ogcapi-maps-1/1.0/conf/dataset
                - http://www.opengis.net/spec/ogcapi-maps-1/1.0/conf/info
        "400":
          description: Invalid or unknown query parameters
        "406":
          description: The media types accepted by the client are not supported for this resource
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections:
    get:
      tags:
      - OGC API Common
      summary: the collections in the dataset
      description: A list of all collections available in this dataset.
      operationId: getCollections
      parameters:
      - $ref: '#/components/parameters/f-png-jpeg-core'
      - $ref: '#/components/parameters/def-param'
      responses:
        "200":
          description: |-
            The collections (geospatial data resources) shared by this API.

            This response can be references directly for every service that wants only essential information at the collections level. /collections/collectionId might return more information.

            The dataset is organized as one or more collections. This resource provides information about and how to access the collections.

            The response contains the list of collections. For each collection, a link
            to other resources present (e.g. the items in the collection, path `/collections/{collectionId}/items`,
            link relation `items`, a map created with data from the collection, path `/collections/{collectionId}/map`,
            link relation `map`) as well as key information about the collection.
            This information includes, but is not limited to:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which maps may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/{collectionId}:
    get:
      tags:
      - OGC API Common
      summary: describes a collection
      description: Description of a collection (geospatial data resource) in this dataset. If it has a link with relation type `map`, the `href` points to a map resource created with data form this collection.
      operationId: describeCollection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/f-png-jpeg-core'
      - $ref: '#/components/parameters/def-param'
      responses:
        "200":
          description: Metadata about the collection including a link to the map.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/{collectionId}/map/metadata:
    get:
      tags:
      - Map resources
      summary: Fetch a maps description
      description: Retrieves the maps description for this collection including the `links` to get a `map`, and the `infoTemplate`
      operationId: describeGeoDataMaps
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Metadata about the maps.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/geodata-map-metadata'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /map/metadata:
    get:
      tags:
      - Map resources
      summary: Fetch a maps description
      description: Retrieves the maps description for this collection including the `links` to get a `map`, and the `infoTemplate`
      operationId: describeDataSetMaps
      responses:
        "200":
          description: Metadata about the maps.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset-map-metadata'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/{collectionId}/styles/{styleId}/map:
    get:
      tags:
      - Geospatial Data Resource Maps
      summary: fetch a map from a collection
      description: Retrieves a map in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height. Some formats require to apply a style in the server side (e.g. png, jpeg, gif) and some others might include a reference to a style to be applied in the client side. The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/core'
      operationId: getMapStyleIdCollectionId
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        schema:
          type: string
      - name: styleId
        in: path
        description: The styleId that should be included in the map. Each maps description includes a valid list of stylesIds.
        required: true
        schema:
          type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parameter. It the 'crs' parameter is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - $ref: '#/components/parameters/f-png-jpeg-main'
        description: |-
          The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.

          Pre-defined values are jpeg, png or gif for image based tiles
          The response to other values is determined by the server.
      - $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
              example: JPEG image
            image/png:
              schema:
                type: string
                format: binary
              example: PNG image
            image/gif:
              schema:
                type: string
                format: binary
              example: GIF image
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/{collectionId}/styles/{styleId}/map/info:
    get:
      tags:
      - Geospatial Data Resource Maps
      summary: fetch information about a point on a map from a collection
      description: Retrieves a getFeatureInfo in map in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height. Some formats require to apply a style in the server side (e.g. png, jpeg, gif) and some others might include a reference to a style to be applied in the client side. The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/info'
      operationId: getFeatureInfoStyleIdCollectionId
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        schema:
          type: string
      - name: styleId
        in: path
        description: The styleId that should be included in the map. Each maps description includes a valid list of stylesIds.
        required: true
        schema:
          type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: i
        in: query
        description: Horizontal (x) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: j
        in: query
        description: Vertical (y) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: infoTemplate
        in: query
        description: Template used for the information response. This parameter can be used to select among GML application schemas or JSON schemas and provide alternative presentations for the same information. If the parameter is missing, the server will select the first template available.
        explode: false
        schema:
          type: string
      - name: fMap
        in: query
        description: Internal format of the maps referenced by a getFeatureInfo.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      - $ref: '#/components/parameters/f-png-jpeg-core'
      - $ref: '#/components/parameters/def-param'
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/{collectionId}/map:
    get:
      tags:
      - Geospatial Data Resource Maps
      summary: fetch a map from a collection
      description: Retrieves a map in the default style, in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.  The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/core'
      operationId: getMapCollectionId
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        schema:
          type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - $ref: '#/components/parameters/f-png-jpeg-main'
        description: |-
          The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.

          Pre-defined values are jpeg, png or gif for image based tiles
          The response to other values is determined by the server.
      - $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
              example: JPEG image
            image/png:
              schema:
                type: string
                format: binary
              example: PNG image
            image/gif:
              schema:
                type: string
                format: binary
              example: GIF image
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/{collectionId}/map/info:
    get:
      tags:
      - Geospatial Data Resource Maps
      summary: fetch information about a point on a map from a collection
      description: Retrieves a getFeatureInfo in map in the default style, in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height. Some formats require to apply a style in the server side (e.g. png, jpeg, gif) and some others might include a reference to a style to be applied in the client side. The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/info'
      operationId: getFeatureInfoCollectionId
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        schema:
          type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: i
        in: query
        description: Horizontal (x) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: j
        in: query
        description: Vertical (y) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: infoTemplate
        in: query
        description: Template used for the information response. This parameter can be used to select among GML application schemas or JSON schemas and provide alternative presentations for the same information. If the parameter is missing, the server will select the first template available.
        explode: false
        schema:
          type: string
      - name: fMap
        in: query
        description: Internal format of the maps referenced by a getFeatureInfo.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      - $ref: '#/components/parameters/f-png-jpeg-core'
      - $ref: '#/components/parameters/def-param'
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /styles/{styleId}/map/:
    get:
      tags:
      - Dataset Maps
      summary: retrieves a map composed by one or more collections
      description: Retrieves a map in the requested crs, on the requested bbox designed to be shown in a device of a width and a height. Some formats require to apply a style in the server side (e.g. png, jpeg, gif) and some others might include a reference to a style to be applied in the client side. The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/root'
      operationId: GetMapStyleIdCollections
      parameters:
      - name: collections
        in: query
        description: The collections that should be included in the response. The parameter value is a comma-separated list of collection identifiers. If the parameters is missing, some or all collections will be included.
        $ref: '#/components/parameters/base-param'
        schema:
          type: array
          items:
            type: string
      - name: styleId
        in: path
        description: The styleId that should be included in the map. Each maps description includes a valid list of stylesIds.
        required: true
        schema:
          type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - $ref: '#/components/parameters/f-png-jpeg-main'
        description: |-
          The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.

          Pre-defined values are jpeg, png or gif for image based tiles
          The response to other values is determined by the server.
      - $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
              example: JPEG image
            image/png:
              schema:
                type: string
                format: binary
              example: PNG image
            image/gif:
              schema:
                type: string
                format: binary
              example: GIF image
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /styles/{styleId}/map/info:
    get:
      tags:
      - Dataset Maps
      summary: fetch information about a point on a map from one or more collections
      description: Retrieves a getFeatureInfo in map for collections in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height. Some formats require to apply a style in the server side (e.g. png, jpeg, gif) and some others might include a reference to a style to be applied in the client side. The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/info'
      operationId: GetFeatureInfoStyleIdCollections
      parameters:
      - name: collections
        in: query
        description: The collections that should be included in the response. The parameter value is a comma-separated list of collection identifiers. If the parameters is missing, some or all collections will be included.
        $ref: '#/components/parameters/base-param'
        schema:
          type: array
          items:
            type: string
      - name: styleId
        in: path
        description: The styleId that should be included in the map. Each maps description includes a valid list of stylesIds.
        required: true
        schema:
          type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: i
        in: query
        description: Horizontal (x) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: j
        in: query
        description: Vertical (y) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: infoTemplate
        in: query
        description: Template used for the information response. This parameter can be used to select among GML application schemas or JSON schemas and provide alternative presentations for the same information. If the parameter is missing, the server will select the first template available.
        explode: false
        schema:
          type: string
      - name: infoGeodada
        in: query
        description: The collections that are used in a response of a information request. The parameter value is a comma-separated list of collection identifiers. If the parameters is missing, all collections will be included.
        $ref: '#/components/parameters/base-param'
        schema:
          type: array
          items:
            type: string
      - name: fMap
        in: query
        description: Internal format of the maps referenced by a getFeatureInfo.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      - $ref: '#/components/parameters/f-png-jpeg-core'
      - $ref: '#/components/parameters/def-param'
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
              example: JPEG image
            image/png:
              schema:
                type: string
                format: binary
              example: PNG image
            image/gif:
              schema:
                type: string
                format: binary
              example: GIF image
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /map/:
    get:
      tags:
      - Dataset Maps
      summary: retrieves a map composed by one or more collections
      description: Retrieves a map int the default style, in the requested crs, on the requested bbox designed to be shown in a device of a width and a height. Some formats require to apply a style in the server side (e.g. png, jpeg, gif) and some others might include a reference to a style to be applied in the client side. The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/root'
      operationId: GetMapCollections
      parameters:
      - name: collections
        in: query
        description: The collections that should be included in the response. The parameter value is a comma-separated list of collection identifiers. If the parameters is missing, some or all collections will be included.
        $ref: '#/components/parameters/base-param'
        schema:
          type: array
          items:
            type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - $ref: '#/components/parameters/f-png-jpeg-main'
        description: |-
          The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.

          Pre-defined values are jpeg, png or gif for image based tiles
          The response to other values is determined by the server.
      - $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
              example: JPEG image
            image/png:
              schema:
                type: string
                format: binary
              example: PNG image
            image/gif:
              schema:
                type: string
                format: binary
              example: GIF image
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /map/info:
    get:
      tags:
      - Dataset Maps
      summary: fetch information about a point on a map from one or more collections
      description: Retrieves a getFeatureInfo in map in the default style for collections in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height. Some formats require to apply a style in the server side (e.g. png, jpeg, gif) and some others might include a reference to a style to be applied in the client side. The feature properties to include in the tile representation can be limited using a query parameter. It is conformant to - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/info'
      operationId: GetFeatureInfoCollections
      parameters:
      - name: collections
        in: query
        description: The collections that should be included in the response. The parameter value is a comma-separated list of collection identifiers. If the parameters is missing, some or all collections will be included.
        $ref: '#/components/parameters/base-param'
        schema:
          type: array
          items:
            type: string
      - name: crs
        in: query
        description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
        required: false
        schema:
          type: string
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - name: bbox
        in: query
        description: |-
          Bounding box of the rendered map. The bounding box is provided as four numbers.

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2

          coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        $ref: '#/components/parameters/base-param'
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
            format: double
      - name: width
        in: query
        description: Width of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: height
        in: query
        description: Height of the viewport to present the response (the map subset).
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: cell-size
        in: query
        description: cell size of the viewport to present the response in millimeters.
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: transparent
        in: query
        description: Background transparency of map (default=true).
        $ref: '#/components/parameters/base-param'
        schema:
          type: boolean
          default: true
      - name: bgcolor
        in: query
        description: Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          default: 0xFFFFFF
      - name: datetime
        in: query
        description: |-
          Either a date-time or an interval, open or closed. Date and time expressions
          adhere to RFC 3339. Open intervals are expressed using double-dots.

          Examples:

          * A date-time: "2018-02-12T23:20:50Z"
          * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
          * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

          Only elemenets that have a temporal property that intersects the value of
          `datetime` are selected.

          If a element has multiple temporal properties, it is the decision of the
          server whether only a single temporal property is used to determine
          the extent or all relevant temporal properties.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
      - name: elevation
        in: query
        description: Elevation value
        $ref: '#/components/parameters/base-param'
        schema:
          type: number
      - name: i
        in: query
        description: Horizontal (x) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: j
        in: query
        description: Vertical (y) coordinate within a map or tile.
        required: true
        schema:
          type: number
      - name: infoTemplate
        in: query
        description: Template used for the information response. This parameter can be used to select among GML application schemas or JSON schemas and provide alternative presentations for the same information. If the parameter is missing, the server will select the first template available.
        explode: false
        schema:
          type: string
      - name: infoGeodada
        in: query
        description: The collections that are used in a response of a information request. The parameter value is a comma-separated list of collection identifiers. If the parameters is missing, all collections will be included.
        $ref: '#/components/parameters/base-param'
        schema:
          type: array
          items:
            type: string
      - name: fMap
        in: query
        description: Internal format of the maps referenced by a getFeatureInfo.
        $ref: '#/components/parameters/base-param'
        schema:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/gif
        example: image/png
      - $ref: '#/components/parameters/f-png-jpeg-core'
      - $ref: '#/components/parameters/def-param'
      responses:
        "200":
          description: Retrieves a map that renders objects of the collectionId in the requested crs, on the requested bbox desigend to be shown in a rendering device of a width and a height.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
              example: JPEG image
            image/png:
              schema:
                type: string
                format: binary
              example: PNG image
            image/gif:
              schema:
                type: string
                format: binary
              example: GIF image
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
components:
  schemas:
    landingPage:
      allOf:
      - $ref: '#/components/schemas/landingPage_1'
      - $ref: '#/components/schemas/landingPage-link'
    landingPage-link:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          example:
          - href: http://data.example.org/?f=json
            rel: self
            type: application/json
            title: This document
          - href: http://data.example.org/?f=html
            rel: alternate
            type: text/html
            title: This document in HTML
          - href: http://data.example.org/api?f=json
            rel: service-desc
            type: application/vnd.oai.openapi+json;version=3.0
            title: API definition in OpenAPI 3.0 JSON
          - href: http://data.example.org/api?f=html
            rel: service-desc
            type: text/html
            title: API definition in HTML
          - href: http://data.example.org/conformance?f=json
            rel: http://www.opengis.net/def/rel/ogc/1.0/conformance
            type: application/json
            title: Conformance classes implemented by this API
          - href: http://data.example.org/collections?f=json
            rel: http://www.opengis.net/def/rel/ogc/1.0/data
            type: application/json
            title: Collections in the dataset in JSON
          - href: http://data.example.org/collections?f=html
            rel: http://www.opengis.net/def/rel/ogc/1.0/data
            type: text/html
            title: Collections in the dataset in HTML
          - href: http://data.example.org/map
            rel: http://www.opengis.net/def/rel/ogc/1.0/map
            type: image/png
            title: Map combining collections in the dataset
          - href: http://data.example.org/map/metadata
            rel: http://www.opengis.net/def/rel/ogc/1.0/map-meta
            type: application/json,
            title: Metadata of the map combining collections in the dataset
          items:
            $ref: '#/components/schemas/link'
    collection:
      allOf:
      - $ref: '#/components/schemas/collection_1'
      - $ref: '#/components/schemas/collection-link'
    collection-link:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          example:
          - href: http://example.com/collections/buildings?f=json
            rel: self
            type: application/json
            title: This document
          - href: http://example.com/concepts/buildings.html
            rel: describedby
            type: text/html'
          - href: https://creativecommons.org/publicdomain/zero/1.0/
            rel: license
            type: text/html
            title: CC0-1.0
          - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
            rel: license
            type: application/rdf+xml
            title: CC0-1.0
          - href: http://data.example.com/collections/buildings/items
            rel: http://www.opengis.net/def/rel/ogc/1.0/items
            title: Retrieve the items of the buildings collection
            type: application/geo+json
          - href: http://data.example.com/collections/buildings/map
            rel: http://www.opengis.net/def/rel/ogc/1.0/map
            title: A map of this collection
          - href: http://data.example.com/collections/buildings/map/metadata
            rel: describedby
            type: application/json
            title: A metadata of a map of this collection
          - href: http://data.example.com/collections/buildings/styles
            rel: http://www.opengis.net/def/rel/ogc/1.0/styles
            type: application/json
            title: The set of available styles for this collection
          items:
            $ref: '#/components/schemas/link'
    geodata-map-metadata:
      allOf:
      - $ref: '#/components/schemas/geodata-map-metadata_1'
      - $ref: '#/components/schemas/geodata-map-metadata-link'
    geodata-map-metadata-link:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          example:
          - href: http://data.example.com/collections/buildings/map/metadata
            rel: self
            type: application/json
          items:
            $ref: '#/components/schemas/link'
    dataset-map-metadata:
      allOf:
      - $ref: '#/components/schemas/dataset-map-metadata_1'
      - $ref: '#/components/schemas/dataset-map-metadata-link'
    dataset-map-metadata-link:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          example:
          - href: http://data.example.com/map/metadata
            rel: self
            type: application/json
          items:
            $ref: '#/components/schemas/link'
    exception:
      required:
      - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: "500"
        description: 'An internal server error occured. Incident ID: 1234567. Please contact admin@example.org.'
    confClasses:
      required:
      - conformsTo
      type: object
      properties:
        conformsTo:
          type: array
          example:
          - http://www.opengis.net/spec/ogcapi-common-1/1.0/req/core
          items:
            type: string
            format: uri
    collections:
      required:
      - collections
      - links
      type: object
      properties:
        links:
          type: array
          nullable: true
          example:
          - href: http://data.example.org/collections?f=json
            rel: self
            type: application/json
            title: this document
          - href: http://data.example.org/collections?f=html
            rel: alternate
            type: text/html
            title: this document as HTML
          - href: http://schemas.example.org/1.0/dataset.xsd
            rel: describedby
            type: application/xml
            title: GML application schema for Acme Corporation dataset data
          - href: http://download.example.org/dataset.gpkg
            rel: enclosure
            type: application/geopackage+sqlite3
            title: Bulk download (GeoPackage)
            length: 472546
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/collection_1'
            - $ref: '#/components/schemas/collection-link_1'
    link:
      required:
      - href
      type: object
      properties:
        href:
          type: string
          example: http://data.example.com/buildings/123
        rel:
          type: string
          example: alternate
        type:
          pattern: ^(?=[-a-z]{1,127}/[-\.a-z0-9]{1,127}$)[a-z]+(-[a-z]+)*/[a-z0-9]+([-\.][a-z0-9]+)*$
          type: string
          example: application/geo+json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Trierer Strasse 70, 53115 Bonn
        length:
          minimum: 0
          type: integer
        templated:
          type: boolean
          description: Use `true` if the `href` property contains a URI template with variables that needs to be substituted by values to get a URI
          example: false
          default: false
        types:
          type: array
          description: "Without this parameter you should repeat a link for each media type the resource is offered. \nAdding this parameter allows listing alternative media types that you can use for this resource. The value in the `type` parameter becomes the recommended media type."
          example: image/png, image/jpeg, image/tiff
          items:
            type: string
    collection_1:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: identifier of the collection used, for example, in URIs
          example: buildings
        title:
          type: string
          description: human readable title of the collection
          example: Buildings in the city of Bonn
        description:
          type: string
          description: a description of the collection
          example: This collection contains buildings
        keywords:
          type: array
          description: keywords about the elements in the collection
          items:
            $ref: '#/components/schemas/keyword'
        attribution:
          type: string
          description: The provider of the source data for the collection. Map viewers normally show this information at the bottom of the map
          example: OpenStreetMap
        extent:
          $ref: '#/components/schemas/extent'
        crs:
          type: array
          description: The list of coordinate reference systems supported by the service. The first item is the default coordinate reference system.
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            type: string
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    keyword:
      required:
      - keyword
      type: object
      properties:
        keyword:
          type: string
          example: land cover
        code:
          type: string
          example: "4612"
        codeSpace:
          type: string
          example: https://www.eionet.europa.eu/gemet/en/concept/
      nullable: true
    extent:
      type: object
      properties:
        spatial:
          $ref: '#/components/schemas/spatialExtent'
        temporal:
          $ref: '#/components/schemas/temporalExtent'
      description: |-
        The extent of the collection. In the Core only spatial and temporal extents are specified. Extensions may add additional members to represent other  extents, for example, thermal or pressure ranges.
        It is recommended that the statial extent is expected in CRS84 except if this is not possible.
    spatialExtent:
      required:
      - bbox
      type: object
      properties:
        bbox:
          $ref: '#/components/schemas/bbox'
        crs:
          $ref: '#/components/schemas/crs'
      description: The spatial extent of the element in the collection.
    bbox:
      minItems: 1
      type: array
      description: |-
        One or more bounding boxes that describe the spatial extent of the dataset.
        In the Core only a single bounding box is supported. Extensions may support
        additional areas. If multiple areas are provided, the union of the bounding
        boxes describes the spatial extent.
      example:
      - - 7.01
        - 50.63
        - 7.22
        - 50.78
      items:
        maxItems: 6
        minItems: 4
        type: array
        description: |-
          West, south, east, north edges of the bounding box. The coordinates
          are in the coordinate reference system specified in `crs`. By default
          this is WGS 84 longitude/latitude (CRS84).
        items:
          type: number
    crs:
      type: string
      description: |-
        Coordinate reference system of the coordinates in the spatial extent
        (property `bbox`). The default reference system is WGS 84 longitude/latitude.
        In the Core this is the only supported coordinate reference system.
        Extensions may support additional coordinate reference systems and add
        additional enum values.
      default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      enum:
      - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    temporalExtent:
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/temporalInterval'
        trs:
          $ref: '#/components/schemas/trs'
      description: The temporal extent of the element in the collection.
      nullable: true
    temporalInterval:
      minItems: 1
      type: array
      description: |-
        One or more time intervals that describe the temporal extent of the dataset.
        The value `null` is supported and indicates an open time intervall.
        In the Core only a single time interval is supported. Extensions may support
        multiple intervals. If multiple intervals are provided, the union of the
        intervals describes the temporal extent.
      nullable: true
      items:
        maxItems: 2
        minItems: 2
        type: array
        description: |-
          Begin and end times of the time interval. The timestamps
          are in the coordinate reference system specified in `trs`. By default
          this is the Gregorian calendar.
        example:
        - 2010-02-15T12:34:56Z
        - null
        items:
          type: string
          format: date-time
          nullable: true
    trs:
      type: string
      description: |-
        Coordinate reference system of the coordinates in the temporal extent
        (property `interval`). The default reference system is the Gregorian calendar.
        In the Core this is the only supported temporal reference system.
        Extensions may support additional temporal reference systems and add
        additional enum values.
      default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
      enum:
      - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
    collection-link_1:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          example:
          - href: http://example.com/collections/buildings?f=json
            rel: item
            type: application/json
            title: CollectionId path description in the OpenAPI
          - href: http://example.com/concepts/buildings.html
            rel: describedby
            type: text/html'
          - href: https://creativecommons.org/publicdomain/zero/1.0/
            rel: license
            type: text/html
            title: CC0-1.0
          - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
            rel: license
            type: application/rdf+xml
            title: CC0-1.0
          items:
            $ref: '#/components/schemas/link'
    featureCollectionGeoJSON:
      required:
      - features
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          $ref: '#/components/schemas/timeStamp'
        numberMatched:
          minimum: 0
          type: integer
        numberReturned:
          minimum: 0
          type: integer
    featureGeoJSON:
      required:
      - geometry
      - properties
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          nullable: true
        id:
          oneOf:
          - type: string
          - type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    geometryGeoJSON:
      oneOf:
      - $ref: '#/components/schemas/pointGeoJSON'
      - $ref: '#/components/schemas/multipointGeoJSON'
      - $ref: '#/components/schemas/linestringGeoJSON'
      - $ref: '#/components/schemas/multilinestringGeoJSON'
      - $ref: '#/components/schemas/polygonGeoJSON'
      - $ref: '#/components/schemas/multipolygonGeoJSON'
      - $ref: '#/components/schemas/geometrycollectionGeoJSON'
    pointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Point
        coordinates:
          minItems: 2
          type: array
          items:
            type: number
    multipointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPoint
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    linestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - LineString
        coordinates:
          minItems: 2
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    multilinestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    polygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          example: Polygon
          enum:
          - Polygon
        coordinates:
          type: array
          example:
          - - - 35.99601746
              - 32.50426061
            - - 36.08110064
              - 32.50426061
            - - 36.08110064
              - 32.57551892
            - - 35.99601746
              - 32.57551892
            - - 35.99601746
              - 32.50426061
          items:
            minItems: 4
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    multipolygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              minItems: 4
              type: array
              items:
                minItems: 2
                type: array
                items:
                  type: number
    geometrycollectionGeoJSON:
      required:
      - geometries
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - GeometryCollection
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/geometryGeoJSONNoCollection'
    geometryGeoJSONNoCollection:
      oneOf:
      - $ref: '#/components/schemas/pointGeoJSON'
      - $ref: '#/components/schemas/multipointGeoJSON'
      - $ref: '#/components/schemas/linestringGeoJSON'
      - $ref: '#/components/schemas/multilinestringGeoJSON'
      - $ref: '#/components/schemas/polygonGeoJSON'
      - $ref: '#/components/schemas/multipolygonGeoJSON'
    timeStamp:
      type: string
      description: This property indicates the time and date when the response was generated.
      format: date-time
      example: 2017-08-17T08:05:32Z
    landingPage_1:
      required:
      - links
      type: object
      properties:
        title:
          type: string
          example: Buildings in Bonn
        description:
          type: string
          example: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    geodata-map-metadata_1:
      allOf:
      - $ref: '#/components/schemas/map-metadata'
    map-metadata:
      type: object
      properties:
        wgs84SpatialExtent:
          $ref: '#/components/schemas/bbox'
        crsSpatialExtents:
          $ref: '#/components/schemas/crsSpatialExtents'
        supportedCRSs:
          type: array
          items:
            type: string
        minScaleDenominador:
          type: number
          description: Minimum scale denominator (inclusive) for which it is appropriate to generate a map of this collection. Requests outside this interval will return an HTTP 404. If it is not present we will assume there is no limit.
          example: 10
        maxScaleDenominador:
          type: number
          description: Maximum scale denominator (inclusive) for which it is appropriate to generate a map of this collection. Requests outside this interval will return an HTTP 404 If it is not present we will assume there is no limit.
          example: 10000000
        minCellSize:
          type: number
          description: Minimum cell size (inclusive). If it is not present we will assume there is no limit.
        maxCellSize:
          type: number
          description: Maximum cell size (inclusive). If it is not present we will assume there is no limit.
          example: 10000000
        recomendedFormat:
          type: string
          description: Recommended output formats for a map request. Depending of the nature of the data, a format might be better than another. Categorical data looks better in a PNG but continuos data and pictures are smaller a JPEG. The map operation details all available formats for the OGC API maps. In contrast, this is the better one for this type of information. It would be one of the supported for the map operation
          example: image/jpeg
        maxWidth:
          type: number
          description: Maximum width and height values that a client is permitted to include in bbox subset operation.  If absent the server imposes no limit.
          example: 2048
        maxHeight:
          type: number
          description: Maximum width and height values that a client is permitted to include in bbox subset operation.  If absent the server imposes no limit.
          example: 2048
    crsSpatialExtents:
      type: array
      description: Available CRSs and minimum spatial extent surrounding the map
      example:
      - crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        bbox:
        - - -180
          - -90
          - 180
          - 90
      - crs: http://www.opengis.net/def/crs/EPSG/0/3395
        bbox:
        - - -2.00375083427892E7
          - -2.00375083427892E7
          - 2.00375083427892E7
          - 2.00375083427892E7
      items:
        $ref: '#/components/schemas/crsSpatialExtent'
    crsSpatialExtent:
      required:
      - crs
      type: object
      properties:
        crs:
          $ref: '#/components/schemas/crs'
        bbox:
          $ref: '#/components/schemas/bbox'
      description: The spatial extent of the element in the collection.
    dataset-map-metadata_1:
      allOf:
      - $ref: '#/components/schemas/map-metadata'
  responses: {}
  parameters:
    base-param:
      required: false
      style: form
      explode: false
    def-param:
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
        - application/json
        - text/html
      example: application/json
    f-png-jpeg-main:
      - name: f
        in: query
    f-png-jpeg-core:
      name: f
      in: query
      description: |-
        The format of the response. If no value is provided, the standard http
        rules apply, i.e., the accept header is used to determine the format.

        Pre-defined values are "json" and "html". The response to other
        values is determined by the server.
    f-png-jpeg:
      name: f
      in: query
      description: |-
        The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.

        Pre-defined values are jpeg, png or gif for image based tiles
        The response to other values is determined by the server.
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
        - image/png
        - image/jpeg
        - image/gif
      example: image/png
    fMap:
      name: fMap
      in: query
      description: Internal format of the maps referenced by a getFeatureInfo.
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
        - image/png
        - image/jpeg
        - image/gif
      example: image/png
